"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/sigil-lang/index.html","ad4f2d419837e9b61658a250a4d0aefc"],["/sigil-lang/static/css/main.58e835f6.css","ab4fc036a97179cd8820cbfb6b9479f0"],["/sigil-lang/static/js/main.a9785a0d.js","cee7a17d867f80bc8636ea7604512bbc"],["/sigil-lang/static/media/aggregate-1.df4dfb0d.png","df4dfb0d4c85addccb345dc3096d5aef"],["/sigil-lang/static/media/atom-node-1.d0fce902.png","d0fce902d2e3799ace7f4ca6957f34ef"],["/sigil-lang/static/media/atom-node-2.c828ac4c.png","c828ac4c3b689344b2f26487ddfae889"],["/sigil-lang/static/media/atom-node-3.65467d79.png","65467d79762e3c2a6485e95ff640e9e1"],["/sigil-lang/static/media/atom-node-4.0c51c8ad.png","0c51c8ad91ff7d0a67571bd68b7e3dbf"],["/sigil-lang/static/media/atom-relationship-1.aea63570.png","aea63570689cf7905746b8d04d497590"],["/sigil-lang/static/media/atom-relationship-2.d89bc8ed.png","d89bc8eded0a7768ae0ece83fb130e4c"],["/sigil-lang/static/media/compound-bundles-1.ed544bb3.png","ed544bb37d37041827bf09e75326a45e"],["/sigil-lang/static/media/compound-clusters-1.0364a4ad.png","0364a4aded30be6b2876f60a6b70bcef"],["/sigil-lang/static/media/compound-paths-1.6c0956a0.png","6c0956a081f46a6681b4b8588e8e7951"],["/sigil-lang/static/media/compound-paths-2.3fed029c.png","3fed029cb6dba15311d511cb02f85267"],["/sigil-lang/static/media/intro-1.c5f49f65.png","c5f49f657a13992fd1c01bd02efc9f73"],["/sigil-lang/static/media/intro-scale-1.ed7d8b2c.png","ed7d8b2c87f0434a2a7a55dc699c49c3"],["/sigil-lang/static/media/sections-1.63262d52.png","63262d5218e877266ee0e52ac47e7fa8"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,t,a,n){var i=new URL(e);return n&&i.pathname.match(n)||(i.search+=(i.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),i.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),i=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),i]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),t=urlsToCacheKeys.has(a));var i="/sigil-lang/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(i,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});